
import java.io.File;
import java.io.FileInputStream;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.Scanner;


public class CA {
	public static void main(String[] args) {
		System.out.println("请输入要验证的IP地址:");
		Scanner input = new Scanner(System.in);
		MD5 md5 = new MD5();
		String IP = input.nextLine();
		File key = new File(".\\public.key");
		File cer = new File(".\\Certificate.cert");
		try {
			if(!key.exists()) {
				System.out.println("没有找到文件，已经退出");
				return;
			}
			if(cer.exists()) {
				cer.delete();
				cer.createNewFile();
			}
			PrintWriter cerfile = new PrintWriter(cer);
			Scanner keyfile = new Scanner(new FileInputStream(key));
			String temp = keyfile.nextLine()+IP;
			String md = md5.getMD5ofStr(temp);
			BigInteger hash = new BigInteger(md, 16);
			BigInteger D = new BigInteger("11257881241573474523463598305426944339255684740296348188889963314759794635199920272554564926719564338472718260019555910009441147963777127817787570799990002108899888837991265654004297602094112424982769938070627714484818917152157839838231215380063486610734112024395205179082087967394601402529189144944817822676048543992376903338340397540015677512355836226816467239309112625688920871232504888047487086564238487773375141441602776054206869686090080828548229597290513911012970174420272699047566396219122546968349740154730016704873790099232761687663669794283185225608621252572816775826669207132640365233449869460058170831377");
			BigInteger N = new BigInteger("20074216763590379274207809820502956172438368907460460664289098486135186945831669339457161713076674322535956266172433903093234600699299712297827284853864743108531643216396407932918312345552643140776399668915892923877444016254039515412694105739871054089559816611601147135590760165400772490546755971928185385120819773308967022034084709711912116224075586806729536930889800924850839356818202488619055148064115876358333348977338976500152600092297592179986377007969399155412704983416461266412260213623901183837818857896668132553106979342888730071473623940256854059382427434876622420524808616804887755823950889412250964484311");
			
			hash = hash.modPow(D, N);
			cerfile.println(hash.toString());
			cerfile.close();
			keyfile.close();
		}catch(Exception e) {
			e.printStackTrace();
			System.out.println("出现错误，请重试");
		}
	}
}
